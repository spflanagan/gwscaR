new.max<-as.numeric(group.boundaries[scaff.ord[i],2])+as.numeric(last.max)
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
rownames(rect.xs)<-scaff.ord
for(i in 1:length(all.scaff)){
if(is.null(group.boundaries)){
#then this is done by relative position only
all.scaff[[i]]<-all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
seq(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+1,
rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+nrow(all.scaff[[i]]),1)
}else{
#then it takes genome space into account
all.scaff[[i]]<-
all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
as.numeric(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1])+as.numeric(all.scaff[[i]][,bp.name])
}
}
#change BP to plot
x.max<-max(rect.xs,na.rm=T)
x.min<-min(rect.xs,na.rm=T)
if(is.null(y.lim)){
y.max<-max(fst.dat[,fst.name])+0.1*max(fst.dat[,fst.name])
y.min<-min(fst.dat[,fst.name])-0.1*min(fst.dat[,fst.name])
if(min(fst.dat[,fst.name]) < 0) {
y.min<-min(fst.dat[,fst.name]) - 0.1*min(fst.dat[,fst.name])
} else {
y.min<-0
}
y.lim<-c(y.min,y.max)
}
displacement<-y.lim[1]-((y.lim[2]-y.lim[1])/30)
plot(c(x.min,x.max),y.lim,xlim=c(x.min,x.max),
ylim=y.lim, col=pt.col,...,
bty="n",type="n",	axes=F, xlab="", ylab="")
for(i in 1:nrow(rect.xs)){
if(i%%2 == 0) {
rect.color<-"white"
} else {
rect.color<-"gray75"
}
rect(rect.xs[i,1],y.lim[1],rect.xs[i,2],y.lim[2],
col=rect.color, border=NA)
if(print.names==T){
text(x=mean(rect.xs[i,]),
y=displacement,labels=rownames(rect.xs)[i],
adj=1,xpd=T,srt=45)
}
}
for(i in 1:length(all.scaff)){
points(all.scaff[[i]][,bp.name],
all.scaff[[i]][,fst.name],
pch=19, cex=pt.cex,col=pt.col,
xlim=c(x.min,x.max),ylim=y.lim)
if(!is.null(ci.dat)){
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] >= ci.dat[1],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[1], pch=19, cex=0.5)
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] <= ci.dat[2],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[2], pch=19, cex=0.5)
}
}
if(axis.size>0){
axis(2, at = seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
ylim =y.lim, pos=0,
labels=seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
las=1,tck = -0.01, xlab="", ylab="", cex.axis=axis.size)
}
xes<-do.call("rbind",all.scaff)
return(xes)
}
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size = 1,
chrom.name="Chrom",bp.name="Pos",
groups=lgs)
fst.plot<-function(fst.dat,ci.dat=NULL, sig.col=c("red","yellow"),pt.col="grey7",
fst.name="Fst", chrom.name="Chrom", bp.name="BP",axis.size=0.5,
scaffold.order=NULL,groups=NULL,print.names=FALSE,y.lim=NULL,
group.boundaries=NULL,pt.cex=0.5,...){
if(!is.null(scaffold.order)){
scaff.ord<-scaffold.order$component_id
lgs<-scaffold.order$object
} else{
if(!is.null(group.boundaries)){
scaff.ord<-unique(group.boundaries[,1])
lgs<-scaff.ord
}else{
scaff.ord<-unique(fst.dat[,chrom.name])
lgs<-scaff.ord
}
}
if(!is.null(groups)){
lgs<-groups
scaff.ord<-groups
}
fst.dat[,fst.name]<-as.numeric(as.character(fst.dat[,fst.name]))
these.scaffs<-scaff.ord[scaff.ord %in% unique(fst.dat[,chrom.name])]
all.scaff<-split(fst.dat, factor(fst.dat[,chrom.name]))
#keep only the scaffolds you're plotting
if(!is.null(groups))
{
all.scaff<-all.scaff[names(all.scaff) %in% groups]
}
group.boundaries<-group.boundaries[scaff.ord,]
last.max<-0
rect.xs<-NULL
addition.values<-0
xlist<-NULL
#set up the rectangles
for(i in 1:length(scaff.ord)){
if(is.null(group.boundaries)){
new.max<-last.max+nrow(all.scaff[[scaff.ord[i]]])
}else{
new.max<-as.numeric(group.boundaries[scaff.ord[i],2])+as.numeric(last.max)
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
rownames(rect.xs)<-scaff.ord
for(i in 1:length(all.scaff)){
if(is.null(group.boundaries)){
#then this is done by relative position only
all.scaff[[i]]<-all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
seq(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+1,
rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+nrow(all.scaff[[i]]),1)
}else{
#then it takes genome space into account
all.scaff[[i]]<-
all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
as.numeric(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1])+as.numeric(all.scaff[[i]][,bp.name])
}
}
#change BP to plot
x.max<-max(rect.xs,na.rm=T)
x.min<-min(rect.xs,na.rm=T)
if(is.null(y.lim)){
y.max<-max(fst.dat[,fst.name])+0.1*max(fst.dat[,fst.name])
y.min<-min(fst.dat[,fst.name])-0.1*min(fst.dat[,fst.name])
if(min(fst.dat[,fst.name]) < 0) {
y.min<-min(fst.dat[,fst.name]) - 0.1*min(fst.dat[,fst.name])
} else {
y.min<-0
}
y.lim<-c(y.min,y.max)
}
displacement<-y.lim[1]-((y.lim[2]-y.lim[1])/30)
plot(c(x.min,x.max),y.lim,xlim=c(x.min,x.max),
ylim=y.lim, col=pt.col,...,
bty="n",type="n",	axes=F, xlab="", ylab="")
for(i in 1:nrow(rect.xs)){
if(i%%2 == 0) {
rect.color<-"white"
} else {
rect.color<-"gray75"
}
rect(rect.xs[i,1],y.lim[1],rect.xs[i,2],y.lim[2],
col=rect.color, border=NA)
if(print.names==T){
text(x=mean(rect.xs[i,]),
y=displacement,labels=rownames(rect.xs)[i],
adj=1,xpd=T,srt=45)
}
}
for(i in 1:length(all.scaff)){
points(all.scaff[[i]][,bp.name],
all.scaff[[i]][,fst.name],
pch=19, cex=pt.cex,col=pt.col,
xlim=c(x.min,x.max),ylim=y.lim)
if(!is.null(ci.dat)){
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] >= ci.dat[1],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[1], pch=19, cex=0.5)
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] <= ci.dat[2],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[2], pch=19, cex=0.5)
}
}
if(axis.size>0){
axis(2, at = seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
ylim =y.lim, pos=0,
labels=seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
las=1,tck = -0.01, xlab="", ylab="", cex.axis=axis.size)
}
xes<-do.call("rbind",all.scaff)
return(xes)
}
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size=1,
chrom.name="Chrom",bp.name="Pos")
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size = 1,
chrom.name="Chrom",bp.name="Pos",
groups=lgs)
unique(fst.dat[,chrom.name]
)
scaff.ord<-unique(fst.dat[,chrom.name])
lgs<-scaff.ord
fst.dat[,fst.name]<-as.numeric(as.character(fst.dat[,fst.name]))
these.scaffs<-scaff.ord[scaff.ord %in% unique(fst.dat[,chrom.name])]
all.scaff<-split(fst.dat, factor(fst.dat[,chrom.name]))
names(all.scaff)
scaff.ord
length(scaff.ord)
for(i in 1:length(scaff.ord)){
if(is.null(group.boundaries)){
new.max<-last.max+nrow(all.scaff[[scaff.ord[i]]])
}else{
new.max<-as.numeric(group.boundaries[scaff.ord[i],2])+as.numeric(last.max)
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
i
scaff.ord[i]
all.scaff[[scaff.ord[i]]]
all.scaff[[174]
]
all.scaff[[as.character(scaff.ord[i])]]
fst.plot<-function(fst.dat,ci.dat=NULL, sig.col=c("red","yellow"),pt.col="grey7",
fst.name="Fst", chrom.name="Chrom", bp.name="BP",axis.size=0.5,
scaffold.order=NULL,groups=NULL,print.names=FALSE,y.lim=NULL,
group.boundaries=NULL,pt.cex=0.5,...){
if(!is.null(scaffold.order)){
scaff.ord<-scaffold.order$component_id
lgs<-scaffold.order$object
} else{
if(!is.null(group.boundaries)){
scaff.ord<-unique(group.boundaries[,1])
lgs<-scaff.ord
}else{
scaff.ord<-unique(fst.dat[,chrom.name])
lgs<-scaff.ord
}
}
if(!is.null(groups)){
lgs<-groups
scaff.ord<-groups
}
fst.dat[,fst.name]<-as.numeric(as.character(fst.dat[,fst.name]))
these.scaffs<-scaff.ord[scaff.ord %in% unique(fst.dat[,chrom.name])]
all.scaff<-split(fst.dat, factor(fst.dat[,chrom.name]))
#keep only the scaffolds you're plotting
if(!is.null(groups))
{
all.scaff<-all.scaff[names(all.scaff) %in% groups]
}
group.boundaries<-group.boundaries[scaff.ord,]
last.max<-0
rect.xs<-NULL
addition.values<-0
xlist<-NULL
#set up the rectangles
for(i in 1:length(scaff.ord)){
if(is.null(group.boundaries)){
new.max<-last.max+nrow(all.scaff[[as.character(scaff.ord[i])]])
}else{
new.max<-as.numeric(group.boundaries[scaff.ord[i],2])+as.numeric(last.max)
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
rownames(rect.xs)<-scaff.ord
for(i in 1:length(all.scaff)){
if(is.null(group.boundaries)){
#then this is done by relative position only
all.scaff[[i]]<-all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
seq(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+1,
rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+nrow(all.scaff[[i]]),1)
}else{
#then it takes genome space into account
all.scaff[[i]]<-
all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
as.numeric(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1])+as.numeric(all.scaff[[i]][,bp.name])
}
}
#change BP to plot
x.max<-max(rect.xs,na.rm=T)
x.min<-min(rect.xs,na.rm=T)
if(is.null(y.lim)){
y.max<-max(fst.dat[,fst.name])+0.1*max(fst.dat[,fst.name])
y.min<-min(fst.dat[,fst.name])-0.1*min(fst.dat[,fst.name])
if(min(fst.dat[,fst.name]) < 0) {
y.min<-min(fst.dat[,fst.name]) - 0.1*min(fst.dat[,fst.name])
} else {
y.min<-0
}
y.lim<-c(y.min,y.max)
}
displacement<-y.lim[1]-((y.lim[2]-y.lim[1])/30)
plot(c(x.min,x.max),y.lim,xlim=c(x.min,x.max),
ylim=y.lim, col=pt.col,...,
bty="n",type="n",	axes=F, xlab="", ylab="")
for(i in 1:nrow(rect.xs)){
if(i%%2 == 0) {
rect.color<-"white"
} else {
rect.color<-"gray75"
}
rect(rect.xs[i,1],y.lim[1],rect.xs[i,2],y.lim[2],
col=rect.color, border=NA)
if(print.names==T){
text(x=mean(rect.xs[i,]),
y=displacement,labels=rownames(rect.xs)[i],
adj=1,xpd=T,srt=45)
}
}
for(i in 1:length(all.scaff)){
points(all.scaff[[i]][,bp.name],
all.scaff[[i]][,fst.name],
pch=19, cex=pt.cex,col=pt.col,
xlim=c(x.min,x.max),ylim=y.lim)
if(!is.null(ci.dat)){
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] >= ci.dat[1],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[1], pch=19, cex=0.5)
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] <= ci.dat[2],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[2], pch=19, cex=0.5)
}
}
if(axis.size>0){
axis(2, at = seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
ylim =y.lim, pos=0,
labels=seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
las=1,tck = -0.01, xlab="", ylab="", cex.axis=axis.size)
}
xes<-do.call("rbind",all.scaff)
return(xes)
}
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size=1,
chrom.name="Chrom",bp.name="Pos")
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size=1,
chrom.name="Chrom",bp.name="Pos")
sel$Chrom <-as.numeric(as.character(sel$Chrom)) #the lgs and chrom have to be the same class
lgs
lgs<-seq(1,22)
sel$Chrom <-as.numeric(as.character(sel$Chrom)) #the lgs and chrom have to be the same class
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size = 1,
chrom.name="Chrom",bp.name="Pos",
groups=lgs)
par(mar=c(2,2,2,2))
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size=1,
chrom.name="Chrom",bp.name="Pos")
#plot without the scaffolds
lgs<-seq(1,22)
sel$Chrom <-as.numeric(as.character(sel$Chrom)) #the lgs and chrom have to be the same class
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size = 1,
chrom.name="Chrom",bp.name="Pos",
groups=lgs)
par(mfrow=c(1,2),mar=c(2,2,2,2))
lgs<-seq(1,22)
sel$Chrom <-as.numeric(as.character(sel$Chrom)) #the lgs and chrom have to be the same class
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size = 1,
chrom.name="Chrom",bp.name="Pos",
groups=lgs)
library(gwscaR)
par(mfrow=c(1,2),mar=c(2,2,2,2))
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size=1,
chrom.name="Chrom",bp.name="Pos")
#plot without the scaffolds
lgs<-seq(1,22)
sel$Chrom <-as.numeric(as.character(sel$Chrom)) #the lgs and chrom have to be the same class
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size = 1,
chrom.name="Chrom",bp.name="Pos",
groups=lgs)
#create a data.frame with the starts and stops for the chromosomes
bounds<-data.frame(levels(as.factor(vcf$`#CHROM`)),tapply(as.numeric(as.character(vcf$POS)),vcf$`#CHROM`,max))
par(mar=c(2,2,2,2))
#plot with the
sel.plot<-fst.plot(sel, fst.name="Fst",
chrom.name="Chrom",bp.name="Pos",
group.boundaries = bounds)
#highlight points that have adjusted p-values < 0.05
#points(sel.plot$Pos[sel.plot$Chi.p.adj<0.05],sel.plot$Fst[sel.plot$Chi.p.adj<0.05],col="cornflowerblue",pch=19)
#Or if you just want to plot the linkage groups
lgs<-seq(1,22)
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size = 1,
chrom.name="Chrom",bp.name="Pos",
group.boundaries = bounds, groups=lgs)
bounds
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size=1,
chrom.name="Chrom",bp.name="Pos",
group.boundaries = bounds)
points(sel.plot$Pos[sel.plot$Chi.p.adj<0.05],sel.plot$Fst[sel.plot$Chi.p.adj<0.05],col="cornflowerblue",pch=19)
par(mar=c(2,2,2,0),oma=c(1,1,1,1),new=TRUE)
par(mar=c(2,2,2,0),oma=c(1,1,1,1),new=TRUE)
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size=1,
chrom.name="Chrom",bp.name="Pos",
group.boundaries = bounds)
points(sel.plot$Pos[sel.plot$Chi.p.adj<0.05],sel.plot$Fst[sel.plot$Chi.p.adj<0.05],col="cornflowerblue",pch=19)
par(new=TRUE)
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size=1,
chrom.name="Chrom",bp.name="Pos",
group.boundaries = bounds)
dev.off()
par(mar=c(2,2,2,0),oma=c(1,1,1,1))
sel.plot<-fst.plot(sel, fst.name="Fst",axis.size=1,
chrom.name="Chrom",bp.name="Pos",
group.boundaries = bounds)
summary(sel$Pos[sel$Chrom == "1"])
summary(as.numeric(sel$Pos[sel$Chrom == "1"]))
summary(as.numeric(as.character(sel$Pos[sel$Chrom == "1"])))
hist(as.numeric(as.character(sel$Pos[sel$Chrom == "1"])))
plot(sel.plot$Pos[sel.plot$Chrom=="1"],sel.plot$Fst[sel.plot$Chrom =="1"])
library(gwscaR)
names(all.scaff)
i<-1
group.boundaries
group.boundaries<-bounds
head(group.boundaries)
head(rect.xs)
group.boundaries<-group.boundaries[scaff.ord,]
last.max<-0
rect.xs<-NULL
addition.values<-0
xlist<-NULL
#set up the rectangles
for(i in 1:length(scaff.ord)){
if(is.null(group.boundaries)){
new.max<-last.max+nrow(all.scaff[[as.character(scaff.ord[i])]])
}else{
new.max<-as.numeric(group.boundaries[scaff.ord[i],2])+as.numeric(last.max)
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
rownames(rect.xs)<-scaff.ord
head(rect.xxs)
head(rect.xs)
i<-1
rownames(rect.xs)
names(all.scaff)[i]
rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]
as.numeric(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1])
all.scaff[[i]][,bp.name]
as.numeric(all.scaff[[i]][,bp.name])
library(gwscaR)
head(bounds)
head(rect.xs)
i
as.numeric(as.character(all.scaff[[i]][,bp.name])
)
all.scaff[[i]][,bp.name]
library(gwscaR)
names(all.scaff)
head(rect.xs)
rect.xs
group.boundaries<-group.boundaries[scaff.ord,]
last.max<-0
rect.xs<-NULL
addition.values<-0
xlist<-NULL
#set up the rectangles
for(i in 1:length(scaff.ord)){
if(is.null(group.boundaries)){
new.max<-last.max+nrow(all.scaff[[as.character(scaff.ord[i])]])
}else{
new.max<-as.numeric(group.boundaries[scaff.ord[i],2])+as.numeric(last.max)
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
rect.xs
i
length(scaff.ord)
scaff.ord[i]
nrow(all.scaff[[as.character(scaff.ord[i])]])
i<-23
scaff.ord
nrow(all.scaff[[as.character(scaff.ord[i])]])
last.max<-403027535
new.max<-last.max+nrow(all.scaff[[as.character(scaff.ord[i])]])
new.max
last.max
as.numeric(last.max)
group.boundaries[scaff.ord[i],2]
group.boundaries
group.boundaries<-groups
group.boundaries
group.boundaries<-bounds
group.boundaries
group.boundaries[scaff.ord[i],2]
group.boundaries
scaff.ord[i]
group.boundaries[group.boundaries[1,] %in% scaff.ord[i],2]
group.boundaries[1,] %in% scaff.ord[i]
scaff.ord[i]
class(scaff.ord[i])
class(group.boundaries[1,])
