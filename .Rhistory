library(gwscaR)
vcf.file<-system.file("extdata", "example.vcf.txt",package = "gwscaR")
vcf<-parse.vcf(vcf.file)
vcf$SNP<-paste(vcf$`#CHROM`,vcf$POS,sep=".")
head(vcf$SNP)
locus.info<-c("#CHROM","POS","ID","REF","ALT","QUAL","FILTER","INFO","FORMAT","SNP")
grp1<-grep("FEM",colnames(vcf),value=T)
grp2<-c(grep("PRM",colnames(vcf),value=T),grep("NPM",colnames(vcf),value=T))
grp1
grp2
fst.one.vcf(vcf[1,],c(locus.info,grp1),c(locus.info,grp2))
vcf.row<-vcf[1,]
group1<-c(locus.info,grp1)
group2<-c(locus.info,grp2)
hs1<-hs2<-hs<-ht<-0
freqall<-gt1<-gt2<-NULL
gt1<-unlist(lapply(vcf.row[group1],function(x){
c<-strsplit(as.character(x),split=":")[[1]][1]
return(c)
}))
vcf.row["#CHROM"]
vcf.row["POS"]
class(vcf.row)
vcf.row<-as.vector(vcf.row)
vcf.row["#CHROM"]
nrow(vcf.row)
vcf["#CHROM"]
head(data.frame(Chrom=vcf["#CHROM"],Pos=vcf["POS"]))
sel<-fst.one.vcf(vcf,c(locus.info,grp1),c(locus.info,grp2),
cov.thresh=0.5,maf=0.05)
head(sel)
fst.one.vcf<-function(vcf.row,group1,group2, cov.thresh=0.2, maf=0.05){
if(nrow(vcf.row) > 1)
{
chr<-vcf.row[,"#CHROM"]
pos<-vcf.row[,"POS"]
} else {
chr<-vcf.row["#CHROM"]
pos<-vcf.row["POS"]
}
hs1<-hs2<-hs<-ht<-0
freqall<-gt1<-gt2<-NULL
gt1<-unlist(lapply(vcf.row[group1],function(x){
c<-strsplit(as.character(x),split=":")[[1]][1]
return(c)
}))
num.ind<-length(gt1)
gt1<-gt1[gt1 %in% c("0/0","1/0","0/1","1/1")]
gt1[gt1=="1/0"]<-"0/1"
gt1<-gsub(pattern = "0",replacement = vcf.row["REF"],gt1)
gt1<-gsub(pattern = "1",replacement = vcf.row["ALT"],gt1)
if(length(gt1)/num.ind>=cov.thresh){
al1<-unlist(strsplit(as.character(gt1),split = "/"))
gt2<-unlist(lapply(vcf.row[group2],function(x){
c<-strsplit(as.character(x),split=":")[[1]][1]
return(c)
}))
num.ind<-length(gt2)
gt2<-gt2[gt2 %in% c("0/0","1/0","0/1","1/1")]
gt2[gt2=="1/0"]<-"0/1"
gt2<-gsub(pattern = "0",replacement = vcf.row["REF"],gt2)
gt2<-gsub(pattern = "1",replacement = vcf.row["ALT"],gt2)
if(length(gt2)/num.ind>=cov.thresh){
al2<-unlist(strsplit(as.character(gt2),split="/"))
#calculate frequencies
freq1<-summary(factor(al1))/sum(summary(factor(al1)))
freq2<-summary(factor(al2))/sum(summary(factor(al2)))
freqall<-summary(as.factor(c(al1,al2)))/
sum(summary(as.factor(c(al1,al2))))
hets<-c(names(freq1)[2],names(freq2)[2])
if(length(freq1)>1 & length(freq2)>1 #both must be polymorphic
& min(freq1,freq2) >= maf){ #and match the maf
hs1<-2*freq1[1]*freq1[2]
hs2<-2*freq2[1]*freq2[2]
hs<-mean(c(hs1,hs2))
ht<-2*freqall[1]*freqall[2]
fst<-(ht-hs)/ht
} else {
hs1<-1-sum(freq1*freq1)
hs2<-1-sum(freq2*freq2)
if(length(freqall)<=1){ fst<-0 }
else{
ht<-2*freqall[1]*freqall[2]
fst<-NA
}
}
}
else {
fst<-NA #gt2 doesn't pass coverage threshold
}
}else {
fst<-NA #it doesn't pass the coverage threshold
}
return(data.frame(Chrom=vcf.row["#CHROM"],Pos=vcf.row["POS"],
Hs1=hs1,Hs2=hs2,Hs=hs,Ht=ht,Fst=fst,NumAlleles=length(factor(freqall)),
Num1=length(gt1),Num2=length(gt2)))
}#end function fst.one.vc
sel<-fst.one.vcf(vcf,c(locus.info,grp1),c(locus.info,grp2),
cov.thresh=0.5,maf=0.05)
head(sel)
fst.one.vcf<-function(vcf.row,group1,group2, cov.thresh=0.2, maf=0.05){
if(nrow(vcf.row) > 1)
{
chr<-vcf.row[,"#CHROM"]
pos<-vcf.row[,"POS"]
} else {
chr<-vcf.row["#CHROM"]
pos<-vcf.row["POS"]
}
hs1<-hs2<-hs<-ht<-0
freqall<-gt1<-gt2<-NULL
gt1<-unlist(lapply(vcf.row[group1],function(x){
c<-strsplit(as.character(x),split=":")[[1]][1]
return(c)
}))
num.ind<-length(gt1)
gt1<-gt1[gt1 %in% c("0/0","1/0","0/1","1/1")]
gt1[gt1=="1/0"]<-"0/1"
gt1<-gsub(pattern = "0",replacement = vcf.row["REF"],gt1)
gt1<-gsub(pattern = "1",replacement = vcf.row["ALT"],gt1)
if(length(gt1)/num.ind>=cov.thresh){
al1<-unlist(strsplit(as.character(gt1),split = "/"))
gt2<-unlist(lapply(vcf.row[group2],function(x){
c<-strsplit(as.character(x),split=":")[[1]][1]
return(c)
}))
num.ind<-length(gt2)
gt2<-gt2[gt2 %in% c("0/0","1/0","0/1","1/1")]
gt2[gt2=="1/0"]<-"0/1"
gt2<-gsub(pattern = "0",replacement = vcf.row["REF"],gt2)
gt2<-gsub(pattern = "1",replacement = vcf.row["ALT"],gt2)
if(length(gt2)/num.ind>=cov.thresh){
al2<-unlist(strsplit(as.character(gt2),split="/"))
#calculate frequencies
freq1<-summary(factor(al1))/sum(summary(factor(al1)))
freq2<-summary(factor(al2))/sum(summary(factor(al2)))
freqall<-summary(as.factor(c(al1,al2)))/
sum(summary(as.factor(c(al1,al2))))
hets<-c(names(freq1)[2],names(freq2)[2])
if(length(freq1)>1 & length(freq2)>1 #both must be polymorphic
& min(freq1,freq2) >= maf){ #and match the maf
hs1<-2*freq1[1]*freq1[2]
hs2<-2*freq2[1]*freq2[2]
hs<-mean(c(hs1,hs2))
ht<-2*freqall[1]*freqall[2]
fst<-(ht-hs)/ht
} else {
hs1<-1-sum(freq1*freq1)
hs2<-1-sum(freq2*freq2)
if(length(freqall)<=1){ fst<-0 }
else{
ht<-2*freqall[1]*freqall[2]
fst<-NA
}
}
}
else {
fst<-NA #gt2 doesn't pass coverage threshold
}
}else {
fst<-NA #it doesn't pass the coverage threshold
}
return(data.frame(Chrom=chr,Pos=pos,
Hs1=hs1,Hs2=hs2,Hs=hs,Ht=ht,Fst=fst,NumAlleles=length(factor(freqall)),
Num1=length(gt1),Num2=length(gt2)))
}#end function fst.one.vcf
sel<-fst.one.vcf(vcf,c(locus.info,grp1),c(locus.info,grp2),
cov.thresh=0.5,maf=0.05)
head(sel)
sel<-sel[!is.na(sel$Fst),] #Remove the ones that weren't polymorphic
head(sel)
library(gwscaR)
sel<-apply(vcf,1,fst.one.vcf,group1=c(locus.info,grp1),group2=c(locus.info,grp2),
cov.thresh=0.5,maf=0.05)
fst.one.vcf<-function(vcf.row,group1,group2, cov.thresh=0.2, maf=0.05){
hs1<-hs2<-hs<-ht<-0
freqall<-gt1<-gt2<-NULL
gt1<-unlist(lapply(vcf.row[group1],function(x){
c<-strsplit(as.character(x),split=":")[[1]][1]
return(c)
}))
num.ind<-length(gt1)
gt1<-gt1[gt1 %in% c("0/0","1/0","0/1","1/1")]
gt1[gt1=="1/0"]<-"0/1"
gt1<-gsub(pattern = "0",replacement = vcf.row["REF"],gt1)
gt1<-gsub(pattern = "1",replacement = vcf.row["ALT"],gt1)
if(length(gt1)/num.ind>=cov.thresh){
al1<-unlist(strsplit(as.character(gt1),split = "/"))
gt2<-unlist(lapply(vcf.row[group2],function(x){
c<-strsplit(as.character(x),split=":")[[1]][1]
return(c)
}))
num.ind<-length(gt2)
gt2<-gt2[gt2 %in% c("0/0","1/0","0/1","1/1")]
gt2[gt2=="1/0"]<-"0/1"
gt2<-gsub(pattern = "0",replacement = vcf.row["REF"],gt2)
gt2<-gsub(pattern = "1",replacement = vcf.row["ALT"],gt2)
if(length(gt2)/num.ind>=cov.thresh){
al2<-unlist(strsplit(as.character(gt2),split="/"))
#calculate frequencies
freq1<-summary(factor(al1))/sum(summary(factor(al1)))
freq2<-summary(factor(al2))/sum(summary(factor(al2)))
freqall<-summary(as.factor(c(al1,al2)))/
sum(summary(as.factor(c(al1,al2))))
hets<-c(names(freq1)[2],names(freq2)[2])
if(length(freq1)>1 & length(freq2)>1 #both must be polymorphic
& min(freq1,freq2) >= maf){ #and match the maf
hs1<-2*freq1[1]*freq1[2]
hs2<-2*freq2[1]*freq2[2]
hs<-mean(c(hs1,hs2))
ht<-2*freqall[1]*freqall[2]
fst<-(ht-hs)/ht
} else {
hs1<-1-sum(freq1*freq1)
hs2<-1-sum(freq2*freq2)
if(length(freqall)<=1){ fst<-0 }
else{
ht<-2*freqall[1]*freqall[2]
fst<-NA
}
}
}
else {
fst<-NA #gt2 doesn't pass coverage threshold
}
}else {
fst<-NA #it doesn't pass the coverage threshold
}
return(data.frame(Chrom=vcf.row["#CHROM"],Pos=vcf.row["POS"],
Hs1=hs1,Hs2=hs2,Hs=hs,Ht=ht,Fst=fst,NumAlleles=length(factor(freqall)),
Num1=length(gt1),Num2=length(gt2)))
}#end function fst.one.vcf
sel<-apply(vcf,1,fst.one.vcf,group1=c(locus.info,grp1),group2=c(locus.info,grp2),
cov.thresh=0.5,maf=0.05)
head(sel)
sel<-do.call(rbind,apply(vcf,1,fst.one.vcf,group1=c(locus.info,grp1),group2=c(locus.info,grp2),
cov.thresh=0.5,maf=0.05))
head(sel)
library(gwscaR)
summary(sel$Fst)
bounds<-tapply(sel$Pos,sel$Chrom,max)
bounds<-tapply(as.numeric(sel$Pos),sel$Chrom,max)
bounds
bounds<-data.frame(levels(se$Chromm),tapply(as.numeric(sel$Pos),sel$Chrom,max))
bounds<-data.frame(levels(sel$Chromm),tapply(as.numeric(sel$Pos),sel$Chrom,max))
bounds<-data.frame(levels(sel$Chrom),tapply(as.numeric(sel$Pos),sel$Chrom,max))
head(bounds)
head()
head(tapply(as.numeric(sel$Pos),sel$Chrom,max))
sel.plot<-fst.plot(sel, fst.name="Fst",
chrom.name="Chrom",bp.name="Pos",
group.boundaries =bounds )
par(mar=c(2,2,2,2))
sel.plot<-fst.plot(sel, fst.name="Fst",
chrom.name="Chrom",bp.name="Pos")
sel<-sel[!is.na(sel$Fst),] #Remove the ones that weren't polymorphic
sel.plot<-fst.plot(sel, fst.name="Fst",
chrom.name="Chrom",bp.name="Pos")
lgs<-c("LG1","LG2","LG3","LG4","LG5","LG6","LG7","LG8","LG9","LG10",
"LG11","LG12","LG13","LG14","LG15","LG16","LG17","LG18","LG19",
"LG20","LG21","LG22")
sel.plot<-fst.plot(sel, fst.name="Fst",
chrom.name="Chrom",bp.name="Pos",
group.boundaries = bounds)
sel.plot<-fst.plot(sel, fst.name="Fst",
chrom.name="Chrom",bp.name="Pos",
group.boundaries = bounds, groups=lgs)
