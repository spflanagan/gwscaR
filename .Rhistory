}
displacement<-y.lim[1]-((y.lim[2]-y.lim[1])/30)
plot(c(x.min,x.max),y.lim,xlim=c(x.min,x.max),
ylim=y.lim, col=pt.col,
bty="n",type="n",	axes=F, xlab="", ylab="")
for(i in 1:nrow(rect.xs)){
if(i%%2 == 0) {
rect.color<-"white"
} else {
rect.color<-"gray75"
}
rect(rect.xs[i,1],y.lim[1],rect.xs[i,2],y.lim[2],
col=rect.color, border=NA)
if(print.names==T){
text(x=mean(rect.xs[i,]),
y=displacement,labels=rownames(rect.xs)[i],
adj=1,xpd=T,srt=45)
}
}
print("plotting points")
for(i in 1:length(all.scaff)){
points(all.scaff[[i]][,bp.name],
all.scaff[[i]][,fst.name],
pch=19, cex=0.5,col=pt.col,
xlim=c(x.min,x.max),ylim=y.lim)
if(!is.null(ci.dat)){
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] >= ci.dat[1],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[1], pch=19, cex=0.5)
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] <= ci.dat[2],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[2], pch=19, cex=0.5)
}
}
if(axis.size>0){
axis(2, at = seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
ylim =y.lim, pos=0,
labels=seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
las=1,tck = -0.01, xlab="", ylab="", cex.axis=axis.size)
}
xes<-do.call("rbind",all.scaff)
return(xes)
}
mo<-fst.plot(mo.plot, ci.dat=c(mo.top1,0),fst.name="MOM.FEM",
chrom.name="Chrom", axis.size=0,bp.name="Pos",
sig.col=c("black","black"),groups=as.factor(scaffs),group.boundaries = max.pos)
fst.plot<-function(fst.dat,ci.dat=NULL, sig.col=c("red","yellow"),pt.col="grey7",
fst.name="Fst", chrom.name="Chrom", bp.name="BP",axis.size=0.5,
scaffold.order=NULL,groups=NULL,print.names=FALSE,y.lim=NULL,
group.boundaries=NULL){
if(!is.null(scaffold.order)){
scaff.ord<-scaffold.order$component_id
lgs<-scaffold.order$object
} else{
if(!is.null(group.boundaries)){
scaff.ord<-levels(factor(group.boundaries[,1]))
lgs<-scaff.ord
}else{
scaff.ord<-levels(factor(fst.dat[,chrom.name]))
lgs<-scaff.ord
}
}
if(!is.null(groups)){
lgs<-groups
scaff.ord<-groups
}
fst.dat[,fst.name]<-as.numeric(as.character(fst.dat[,fst.name]))
these.scaffs<-scaff.ord[scaff.ord %in% factor(fst.dat[,chrom.name])]
all.scaff<-split(fst.dat, factor(fst.dat[,chrom.name]))
group.boundaries<-group.boundaries[scaff.ord,]
last.max<-0
rect.xs<-NULL
addition.values<-0
xlist<-NULL
#set up the rectangles
for(i in 1:length(scaff.ord)){
if(is.null(group.boundaries)){
new.max<-max(last.max+nrow(all.scaff[[scaff.ord[i]]]))
}else{
new.max<-group.boundaries[scaff.ord[i],2]+last.max
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
print(head(rect.xs))
for(i in 1:length(all.scaff)){
if(is.null(group.boundaries)){
#then this is done by relative position only
all.scaff[[i]]<-all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
seq(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1],rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+nrow(all.scaff[[i]]),1)
}else{
#then it takes genome space into account
all.scaff[[i]]<-
all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
as.numeric(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1])+as.numeric(all.scaff[[i]][,bp.name])
}
}
#change BP to plot
print("plotting rectangles")
x.max<-max(rect.xs)
x.min<-min(rect.xs)
if(is.null(y.lim)){
y.max<-max(fst.dat[,fst.name])+0.1*max(fst.dat[,fst.name])
y.min<-min(fst.dat[,fst.name])-0.1*min(fst.dat[,fst.name])
if(min(fst.dat[,fst.name]) < 0) {
y.min<-min(fst.dat[,fst.name]) - 0.1*min(fst.dat[,fst.name])
} else {
y.min<-0
}
y.lim<-c(y.min,y.max)
}
displacement<-y.lim[1]-((y.lim[2]-y.lim[1])/30)
plot(c(x.min,x.max),y.lim,xlim=c(x.min,x.max),
ylim=y.lim, col=pt.col,
bty="n",type="n",	axes=F, xlab="", ylab="")
for(i in 1:nrow(rect.xs)){
if(i%%2 == 0) {
rect.color<-"white"
} else {
rect.color<-"gray75"
}
rect(rect.xs[i,1],y.lim[1],rect.xs[i,2],y.lim[2],
col=rect.color, border=NA)
if(print.names==T){
text(x=mean(rect.xs[i,]),
y=displacement,labels=rownames(rect.xs)[i],
adj=1,xpd=T,srt=45)
}
}
print("plotting points")
for(i in 1:length(all.scaff)){
points(all.scaff[[i]][,bp.name],
all.scaff[[i]][,fst.name],
pch=19, cex=0.5,col=pt.col,
xlim=c(x.min,x.max),ylim=y.lim)
if(!is.null(ci.dat)){
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] >= ci.dat[1],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[1], pch=19, cex=0.5)
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] <= ci.dat[2],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[2], pch=19, cex=0.5)
}
}
if(axis.size>0){
axis(2, at = seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
ylim =y.lim, pos=0,
labels=seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
las=1,tck = -0.01, xlab="", ylab="", cex.axis=axis.size)
}
xes<-do.call("rbind",all.scaff)
return(xes)
}
mo<-fst.plot(mo.plot, ci.dat=c(mo.top1,0),fst.name="MOM.FEM",
chrom.name="Chrom", axis.size=0,bp.name="Pos",
sig.col=c("black","black"),groups=as.factor(scaffs),group.boundaries = max.pos)
fst.plot<-function(fst.dat,ci.dat=NULL, sig.col=c("red","yellow"),pt.col="grey7",
fst.name="Fst", chrom.name="Chrom", bp.name="BP",axis.size=0.5,
scaffold.order=NULL,groups=NULL,print.names=FALSE,y.lim=NULL,
group.boundaries=NULL){
if(!is.null(scaffold.order)){
scaff.ord<-scaffold.order$component_id
lgs<-scaffold.order$object
} else{
if(!is.null(group.boundaries)){
scaff.ord<-levels(factor(group.boundaries[,1]))
lgs<-scaff.ord
}else{
scaff.ord<-levels(factor(fst.dat[,chrom.name]))
lgs<-scaff.ord
}
}
if(!is.null(groups)){
lgs<-groups
scaff.ord<-groups
}
fst.dat[,fst.name]<-as.numeric(as.character(fst.dat[,fst.name]))
these.scaffs<-scaff.ord[scaff.ord %in% factor(fst.dat[,chrom.name])]
all.scaff<-split(fst.dat, factor(fst.dat[,chrom.name]))
group.boundaries<-group.boundaries[scaff.ord,]
last.max<-0
rect.xs<-NULL
addition.values<-0
xlist<-NULL
#set up the rectangles
for(i in 1:length(scaff.ord)){
if(is.null(group.boundaries)){
new.max<-max(last.max+nrow(all.scaff[[scaff.ord[i]]]))
}else{
new.max<-group.boundaries[scaff.ord[i],2]+last.max
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
rownames(rect.xs)<-scaff.ord
print(head(rect.xs))
for(i in 1:length(all.scaff)){
if(is.null(group.boundaries)){
#then this is done by relative position only
all.scaff[[i]]<-all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
seq(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1],rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+nrow(all.scaff[[i]]),1)
}else{
#then it takes genome space into account
all.scaff[[i]]<-
all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
as.numeric(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1])+as.numeric(all.scaff[[i]][,bp.name])
}
}
#change BP to plot
print("plotting rectangles")
x.max<-max(rect.xs)
x.min<-min(rect.xs)
if(is.null(y.lim)){
y.max<-max(fst.dat[,fst.name])+0.1*max(fst.dat[,fst.name])
y.min<-min(fst.dat[,fst.name])-0.1*min(fst.dat[,fst.name])
if(min(fst.dat[,fst.name]) < 0) {
y.min<-min(fst.dat[,fst.name]) - 0.1*min(fst.dat[,fst.name])
} else {
y.min<-0
}
y.lim<-c(y.min,y.max)
}
displacement<-y.lim[1]-((y.lim[2]-y.lim[1])/30)
plot(c(x.min,x.max),y.lim,xlim=c(x.min,x.max),
ylim=y.lim, col=pt.col,
bty="n",type="n",	axes=F, xlab="", ylab="")
for(i in 1:nrow(rect.xs)){
if(i%%2 == 0) {
rect.color<-"white"
} else {
rect.color<-"gray75"
}
rect(rect.xs[i,1],y.lim[1],rect.xs[i,2],y.lim[2],
col=rect.color, border=NA)
if(print.names==T){
text(x=mean(rect.xs[i,]),
y=displacement,labels=rownames(rect.xs)[i],
adj=1,xpd=T,srt=45)
}
}
print("plotting points")
for(i in 1:length(all.scaff)){
points(all.scaff[[i]][,bp.name],
all.scaff[[i]][,fst.name],
pch=19, cex=0.5,col=pt.col,
xlim=c(x.min,x.max),ylim=y.lim)
if(!is.null(ci.dat)){
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] >= ci.dat[1],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[1], pch=19, cex=0.5)
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] <= ci.dat[2],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[2], pch=19, cex=0.5)
}
}
if(axis.size>0){
axis(2, at = seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
ylim =y.lim, pos=0,
labels=seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
las=1,tck = -0.01, xlab="", ylab="", cex.axis=axis.size)
}
xes<-do.call("rbind",all.scaff)
return(xes)
}
mo<-fst.plot(mo.plot, ci.dat=c(mo.top1,0),fst.name="MOM.FEM",
chrom.name="Chrom", axis.size=0,bp.name="Pos",
sig.col=c("black","black"),groups=as.factor(scaffs),group.boundaries = max.pos)
fst.plot<-function(fst.dat,ci.dat=NULL, sig.col=c("red","yellow"),pt.col="grey7",
fst.name="Fst", chrom.name="Chrom", bp.name="BP",axis.size=0.5,
scaffold.order=NULL,groups=NULL,print.names=FALSE,y.lim=NULL,
group.boundaries=NULL){
if(!is.null(scaffold.order)){
scaff.ord<-scaffold.order$component_id
lgs<-scaffold.order$object
} else{
if(!is.null(group.boundaries)){
scaff.ord<-levels(factor(group.boundaries[,1]))
lgs<-scaff.ord
}else{
scaff.ord<-levels(factor(fst.dat[,chrom.name]))
lgs<-scaff.ord
}
}
if(!is.null(groups)){
lgs<-groups
scaff.ord<-groups
}
fst.dat[,fst.name]<-as.numeric(as.character(fst.dat[,fst.name]))
these.scaffs<-scaff.ord[scaff.ord %in% factor(fst.dat[,chrom.name])]
all.scaff<-split(fst.dat, factor(fst.dat[,chrom.name]))
group.boundaries<-group.boundaries[scaff.ord,]
last.max<-0
rect.xs<-NULL
addition.values<-0
xlist<-NULL
#set up the rectangles
for(i in 1:length(scaff.ord)){
if(is.null(group.boundaries)){
new.max<-max(last.max+nrow(all.scaff[[scaff.ord[i]]]))
}else{
new.max<-group.boundaries[scaff.ord[i],2]+last.max
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
rownames(rect.xs)<-scaff.ord
for(i in 1:length(all.scaff)){
if(is.null(group.boundaries)){
#then this is done by relative position only
all.scaff[[i]]<-all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
seq(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1],rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+nrow(all.scaff[[i]]),1)
}else{
#then it takes genome space into account
all.scaff[[i]]<-
all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
as.numeric(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1])+as.numeric(all.scaff[[i]][,bp.name])
}
}
#change BP to plot
x.max<-max(rect.xs)
x.min<-min(rect.xs)
if(is.null(y.lim)){
y.max<-max(fst.dat[,fst.name])+0.1*max(fst.dat[,fst.name])
y.min<-min(fst.dat[,fst.name])-0.1*min(fst.dat[,fst.name])
if(min(fst.dat[,fst.name]) < 0) {
y.min<-min(fst.dat[,fst.name]) - 0.1*min(fst.dat[,fst.name])
} else {
y.min<-0
}
y.lim<-c(y.min,y.max)
}
displacement<-y.lim[1]-((y.lim[2]-y.lim[1])/30)
plot(c(x.min,x.max),y.lim,xlim=c(x.min,x.max),
ylim=y.lim, col=pt.col,
bty="n",type="n",	axes=F, xlab="", ylab="")
for(i in 1:nrow(rect.xs)){
if(i%%2 == 0) {
rect.color<-"white"
} else {
rect.color<-"gray75"
}
rect(rect.xs[i,1],y.lim[1],rect.xs[i,2],y.lim[2],
col=rect.color, border=NA)
if(print.names==T){
text(x=mean(rect.xs[i,]),
y=displacement,labels=rownames(rect.xs)[i],
adj=1,xpd=T,srt=45)
}
}
for(i in 1:length(all.scaff)){
points(all.scaff[[i]][,bp.name],
all.scaff[[i]][,fst.name],
pch=19, cex=0.5,col=pt.col,
xlim=c(x.min,x.max),ylim=y.lim)
if(!is.null(ci.dat)){
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] >= ci.dat[1],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[1], pch=19, cex=0.5)
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] <= ci.dat[2],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[2], pch=19, cex=0.5)
}
}
if(axis.size>0){
axis(2, at = seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
ylim =y.lim, pos=0,
labels=seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
las=1,tck = -0.01, xlab="", ylab="", cex.axis=axis.size)
}
xes<-do.call("rbind",all.scaff)
return(xes)
}
mo<-fst.plot(mo.plot, ci.dat=c(mo.top1,0),fst.name="MOM.FEM",
chrom.name="Chrom", axis.size=0,bp.name="Pos",
sig.col=c("black","black"),groups=as.factor(scaffs),group.boundaries = max.pos)
fst.plot<-function(fst.dat,ci.dat=NULL, sig.col=c("red","yellow"),pt.col="grey7",
fst.name="Fst", chrom.name="Chrom", bp.name="BP",axis.size=0.5,
scaffold.order=NULL,groups=NULL,print.names=FALSE,y.lim=NULL,
group.boundaries=NULL){
if(!is.null(scaffold.order)){
scaff.ord<-scaffold.order$component_id
lgs<-scaffold.order$object
} else{
if(!is.null(group.boundaries)){
scaff.ord<-levels(factor(group.boundaries[,1]))
lgs<-scaff.ord
}else{
scaff.ord<-levels(factor(fst.dat[,chrom.name]))
lgs<-scaff.ord
}
}
if(!is.null(groups)){
lgs<-groups
scaff.ord<-groups
}
fst.dat[,fst.name]<-as.numeric(as.character(fst.dat[,fst.name]))
these.scaffs<-scaff.ord[scaff.ord %in% factor(fst.dat[,chrom.name])]
all.scaff<-split(fst.dat, factor(fst.dat[,chrom.name]))
group.boundaries<-group.boundaries[scaff.ord,]
last.max<-0
rect.xs<-NULL
addition.values<-0
xlist<-NULL
#set up the rectangles
for(i in 1:length(scaff.ord)){
if(is.null(group.boundaries)){
new.max<-max(last.max+nrow(all.scaff[[scaff.ord[i]]]))
}else{
new.max<-group.boundaries[scaff.ord[i],2]+last.max
}
rect.xs<-rbind(rect.xs,c(last.max, new.max))
rownames(rect.xs)[i]<-scaff.ord[i]
addition.values<-c(addition.values, new.max)
last.max<-new.max
}
rownames(rect.xs)<-scaff.ord
for(i in 1:length(all.scaff)){
if(is.null(group.boundaries)){
#then this is done by relative position only
all.scaff[[i]]<-all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
seq(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1],rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1]+nrow(all.scaff[[i]]),1)
}else{
#then it takes genome space into account
all.scaff[[i]]<-
all.scaff[[i]][order(all.scaff[[i]][,bp.name]),]
all.scaff[[i]][,bp.name]<-
as.numeric(rect.xs[rownames(rect.xs) %in% names(all.scaff)[i],1])+as.numeric(all.scaff[[i]][,bp.name])
}
}
#change BP to plot
x.max<-max(rect.xs)
x.min<-min(rect.xs)
if(is.null(y.lim)){
y.max<-max(fst.dat[,fst.name])+0.1*max(fst.dat[,fst.name])
y.min<-min(fst.dat[,fst.name])-0.1*min(fst.dat[,fst.name])
if(min(fst.dat[,fst.name]) < 0) {
y.min<-min(fst.dat[,fst.name]) - 0.1*min(fst.dat[,fst.name])
} else {
y.min<-0
}
y.lim<-c(y.min,y.max)
}
displacement<-y.lim[1]-((y.lim[2]-y.lim[1])/30)
plot(c(x.min,x.max),y.lim,xlim=c(x.min,x.max),
ylim=y.lim, col=pt.col,
bty="n",type="n",	axes=F, xlab="", ylab="")
for(i in 1:nrow(rect.xs)){
if(i%%2 == 0) {
rect.color<-"white"
} else {
rect.color<-"gray75"
}
rect(rect.xs[i,1],y.lim[1],rect.xs[i,2],y.lim[2],
col=rect.color, border=NA)
if(print.names==T){
text(x=mean(rect.xs[i,]),
y=displacement,labels=rownames(rect.xs)[i],
adj=1,xpd=T,srt=45)
}
}
for(i in 1:length(all.scaff)){
points(all.scaff[[i]][,bp.name],
all.scaff[[i]][,fst.name],
pch=19, cex=0.5,col=pt.col,
xlim=c(x.min,x.max),ylim=y.lim)
if(!is.null(ci.dat)){
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] >= ci.dat[1],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[1], pch=19, cex=0.5)
temp.sig<-all.scaff[[i]][all.scaff[[i]][,fst.name] <= ci.dat[2],]
points(temp.sig[,bp.name], temp.sig[,fst.name],
col=sig.col[2], pch=19, cex=0.5)
}
}
if(axis.size>0){
axis(2, at = seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
ylim =y.lim, pos=0,
labels=seq(round(y.lim[1],2),round(y.lim[2],2),
round((y.lim[2]-y.lim[1])/2, digits=2)),
las=1,tck = -0.01, xlab="", ylab="", cex.axis=axis.size)
}
xes<-do.call("rbind",all.scaff)
return(xes)
}
mo<-fst.plot(mo.plot, ci.dat=c(mo.top1,0),fst.name="MOM.FEM",
chrom.name="Chrom", axis.size=0,bp.name="Pos",print.names = T,
sig.col=c("black","black"),groups=as.factor(scaffs),group.boundaries = max.pos)
max(keep.vcf[keep.vcf$`#CHROM`=="LG10","POS"])
max(mo.plot[mo.plot$Chrom=="LG10","Pos"])
source('~/GitHub/gwscaR/R/gwscaR.R')
